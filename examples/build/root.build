# file      : examples/build/root.build
# license   : MIT; see accompanying LICENSE file

cxx.std = latest

using cxx

hxx{*}: extension = hxx
ixx{*}: extension = ixx
txx{*}: extension = txx
cxx{*}: extension = cxx

if ($cxx.target.system == 'win32-msvc')
  cxx.poptions += -D_CRT_SECURE_NO_WARNINGS -D_SCL_SECURE_NO_WARNINGS

if ($cxx.class == 'msvc')
  cxx.coptions += /wd4251 /wd4275 /wd4800

# Load cli module. It must be available from the system or from the base
# project. Generating files with cli is a part of the examples, so distributing
# pre-generated files would be meaningless.
#
# @@ How to initialize the module to use a base project cli executable by
#    default (if present and not configured to use another one)? Should it be
#    assignment like 'config.cli = $out_root/../cli/cli' prior 'using config'
#    in bootstrap.build, but what if it doesn't exist?
#
using cli

# Every exe{} in this subproject is by default a test.
#
exe{*}: test = true

# Specify the test target for cross-testing.
#
test.target = $cxx.target
