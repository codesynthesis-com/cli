// This code was generated by CLI, a command line interface
// compiler for C++.
//

namespace cli
{
  // unknown_mode
  //
  inline unknown_mode::
  unknown_mode (value v)
  : v_ (v)
  {
  }

  // exception
  //
  inline std::ostream&
  operator<< (std::ostream& os, const exception& e)
  {
    e.print (os);
    return os;
  }

  // unknown_option
  //
  inline unknown_option::
  unknown_option (const std::string& option)
  : option_ (option)
  {
  }

  inline const std::string& unknown_option::
  option () const
  {
    return option_;
  }

  // unknown_argument
  //
  inline unknown_argument::
  unknown_argument (const std::string& argument)
  : argument_ (argument)
  {
  }

  inline const std::string& unknown_argument::
  argument () const
  {
    return argument_;
  }

  // missing_value
  //
  inline missing_value::
  missing_value (const std::string& option)
  : option_ (option)
  {
  }

  inline const std::string& missing_value::
  option () const
  {
    return option_;
  }

  // invalid_value
  //
  inline invalid_value::
  invalid_value (const std::string& option,
                 const std::string& value)
  : option_ (option),  value_ (value)
  {
  }

  inline const std::string& invalid_value::
  option () const
  {
    return option_;
  }

  inline const std::string& invalid_value::
  value () const
  {
    return value_;
  }
}

// options
//

inline bool const& options::
help () const
{
  return help_;
}

inline bool const& options::
version () const
{
  return version_;
}

inline std::string const& options::
output_dir () const
{
  return output_dir_;
}

inline bool const& options::
suppress_inline () const
{
  return suppress_inline_;
}

inline std::string const& options::
hxx_suffix () const
{
  return hxx_suffix_;
}

inline std::string const& options::
ixx_suffix () const
{
  return ixx_suffix_;
}

inline std::string const& options::
cxx_suffix () const
{
  return cxx_suffix_;
}

inline std::string const& options::
option_prefix () const
{
  return option_prefix_;
}

inline std::string const& options::
option_separator () const
{
  return option_separator_;
}

inline bool const& options::
include_with_brackets () const
{
  return include_with_brackets_;
}

inline std::string const& options::
include_prefix () const
{
  return include_prefix_;
}

inline std::string const& options::
guard_prefix () const
{
  return guard_prefix_;
}

inline std::map<std::string, std::string> const& options::
reserved_name () const
{
  return reserved_name_;
}

