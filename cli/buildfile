# file      : cli/buildfile
# license   : MIT; see accompanying LICENSE file

import libs = libcutl%lib{cutl}

exe{cli}: cxx{cli} libue{cli}
{
  # Target metadata, see also --build2-metadata in cli.cxx.
  #
  cli.version  = $version.project_id
  cli.checksum = $version
}

libue{cli}: {hxx ixx txx cxx}{** -cli -version -options} \
            {hxx}{version} {hxx ixx cxx}{options}        \
            $libs

hxx{version}: in{version} $src_root/manifest

# Build options.
#
# Pass the copyright notice extracted from the LICENSE file.
#
copyright = $process.run_regex(cat $src_root/LICENSE,    \
                               'Copyright \(c\) (.+)\.', \
                               '\1')

obj{cli}: cxx.poptions += -DCLI_COPYRIGHT=\"$copyright\"

# Generated options parser.
#
if $cli.configured
{
  cli.cxx{options}: cli{options}

  cli.options += --include-with-brackets --include-prefix cli \
--guard-prefix CLI --generate-file-scanner --generate-specifier \
--generate-modifier --reserved-name stdout

  cli.cxx{*}:
  {
    # Include the generated cli files into the distribution and don't remove
    # them when cleaning in src (so that clean results in a state identical to
    # distributed).
    #
    dist  = true
    clean = ($src_root != $out_root)

    # We keep the generated code in the repository so copy it back to src
    # in case of a forwarded configuration.
    #
    backlink = overwrite
  }
}
